{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","onChange","Component","App","characters","character","filter","i","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OAAO,gCAAQJ,KAiBFS,EAdD,SAACV,GACb,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,cAAeA,EACfO,gBAAiBA,Q,OCSVE,E,4MA3CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IACd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUH,KAAKP,eAEjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUH,KAAKP,eAEjB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAtCvCM,aCmCJC,E,4MAhCbb,MAAQ,CACNc,WAAY,I,EAGdP,aAAe,SAACQ,GACd,EAAKV,SAAS,CAAES,WAAW,GAAD,mBAAM,EAAKd,MAAMc,YAAjB,CAA6BC,O,EAGzDnB,gBAAkB,SAACJ,GACjB,IAAQsB,EAAe,EAAKd,MAApBc,WACR,EAAKT,SAAS,CACZS,WAAYA,EAAWE,QAAO,SAACD,EAAWE,GACxC,OAAOA,IAAMzB,Q,4CAKnB,WACE,IAAQsB,EAAeN,KAAKR,MAApBc,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CACE7B,cAAeyB,EACflB,gBAAiBY,KAAKZ,kBAExB,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA3BfK,a,MCClBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a6548780.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = (props) => {\n  const { characterData, removeCharacter } = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={characterData}\n        removeCharacter={removeCharacter}\n      ></TableBody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  state = this.initialState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [],\n  };\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}